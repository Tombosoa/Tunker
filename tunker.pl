#!/usr/bin/perl

use strict;
use warnings;
use File::Path qw(make_path);

print << "ASCII_ART";
  _____            _             
 |_   _|   _ _ __ | | _____ _ __ 
   | || | | | '_ \\| |/ / _ \\ '__|
   | || |_| | | | |   <  __/ |   
   |_| \\__,_|_| |_|_|\\_\\___|_|   
                                 
                                V.1.0
ASCII_ART

install_cpan_modules();

while (1) {
    print "Enter something ('exit' to quit, 'tunker generate' to create the TunkerApp folder) : ";
    my $input = <STDIN>;  

    $input =~ s/^\s+|\s+$//g;

    if ($input eq 'exit') {
        last;  
    } elsif ($input eq 'tunker generate') {
        create_tunker_files();
    } elsif ($input eq 'tunker bell') {
        execute_tunker();
    } else {
        print "You entered: $input\n";
    }
}

print "Program terminated.\n";

sub install_cpan_modules {
    use CPAN;
    CPAN::Shell->install('HTTP::Server::Simple::CGI');
    CPAN::Shell->install('HTTP::Response');
}

sub create_tunker_files {
    my $directory = './'; 

    my $tunker_dir = "$directory/TunkerApp";
    unless (-e $tunker_dir) {
        make_path($tunker_dir) or die "Unable to create the TunkerApp directory: $!";
        print "TunkerApp directory created.\n";
    } else {
        print "The TunkerApp directory already exists.\n";
    }

    my $tunker_content = << 'TUNKER_CONTENT';
#!/usr/bin/perl

use strict;
use warnings;
use HTTP::Server::Simple::CGI;
use HTTP::Response;

my $server = MyWebServer->new(5556);
$server->run();

package MyWebServer;

use base qw(HTTP::Server::Simple::CGI);

sub handle_request {
    my ($self, $cgi) = @_;

    my $path_info = $cgi->path_info();
    print STDERR "Path info: $path_info\n"; 

    if ($path_info eq '/' || $path_info eq '/index.html') {
        my $html_content = read_index_html();
        print "HTTP/1.0 200 OK\r\n";
        print "Content-Type: text/html\r\n\r\n";
        print $html_content;
    } else {
        print "HTTP/1.0 404 Not Found\r\n";
        print "Content-Type: text/plain\r\n\r\n";
        print "404 Not Found\n";
    }
}

sub read_index_html {
    my $index_file = './index.html';
    unless (-e $index_file) {
        die "index.html file not found in TunkerApp directory";
    }

    open(my $fh, '<', $index_file) or die "Unable to open index.html: $!";
    my $html_content = do { local $/; <$fh> };
    close($fh);

    return $html_content;
}

TUNKER_CONTENT

    my $tunker_file = "$tunker_dir/tunker.tuk";
    unless (-e $tunker_file) {
        open(my $fh, '>', $tunker_file) or die "Unable to create the tunker.tuk file: $!";
        print $fh $tunker_content;
        close $fh;
        print "tunker.tuk file created.\n";
        chmod 0755, $tunker_file or die "Unable to set permissions on $tunker_file: $!";
    } else {
        print "The tunker.tuk file already exists.\n";
    }

    my $html_content = << 'HTML';
<!DOCTYPE html>
<html>
<head>
    <title>TunkerApp</title>
</head>
<body>
    <h1>Welcome to TunkerApp!</h1>
    <p>This is a demo page generated by Tunker.</p>
</body>
</html>
HTML

    my $index_file = "$tunker_dir/index.html";
    unless (-e $index_file) {
        open(my $fh, '>', $index_file) or die "Unable to create the index.html file: $!";
        print $fh $html_content;
        close $fh;
        print "index.html file created.\n";
    } else {
        print "The index.html file already exists.\n";
    }

    my $readme_file = "$tunker_dir/readme";
    unless (-e $readme_file) {
        open(my $fh, '>', $readme_file) or die "Unable to create the readme file: $!";
        print $fh "Thanks for testing Tunker, this is a sample experience about learning\n";
        close $fh;
        print "readme file created.\n";
    } else {
        print "The readme file already exists.\n";
    }
}

sub execute_tunker {
    my $directory = './TunkerApp';

    unless (-d $directory) {
        print "The TunkerApp directory does not exist. Run 'tunker generate' first.\n";
        return;
    }

    chdir $directory or die "Unable to change directory to $directory: $!";

    system("./tunker.tuk") == 0 or die "Failed to execute tunker.tuk: $!";
}
